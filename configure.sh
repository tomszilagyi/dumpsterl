#!/bin/bash

CONFIG=$1

echo "Configuring dumpsterl:"
cat <<EOF > $CONFIG
%% Generated by configure.sh

-ifndef(_CONFIG_HRL_).
-define(_CONFIG_HRL_, true).

EOF

ERLANG_OTP_RELEASE=$(erl -noshell -eval 'io:fwrite(erlang:system_info(otp_release)), halt().')
case "$ERLANG_OTP_RELEASE" in
    R11[AB]*) ERLANG_OTP_RELEASE=11;;
    R12[AB]*) ERLANG_OTP_RELEASE=12;;
    R13[AB]*) ERLANG_OTP_RELEASE=13;;
    R14[AB]*) ERLANG_OTP_RELEASE=14;;
    R15[AB]*) ERLANG_OTP_RELEASE=15;;
    R16[AB]*) ERLANG_OTP_RELEASE=16;;
    # Newer versions are already single-integer
    *) ;;
esac

if [ $ERLANG_OTP_RELEASE -lt 16 ] ; then
    echo
    echo "********************************************************"
    echo "*  Sorry, dumpsterl requires Erlang/OTP R16 or later!  *"
    echo "********************************************************"
    echo
    exit 1
fi

echo " - Erlang/OTP release: R$ERLANG_OTP_RELEASE"
echo "-define(ERLANG_OTP_RELEASE, $ERLANG_OTP_RELEASE)." >> $CONFIG

# See if the wx application is available in our Erlang/OTP
WX_PRIVDIR=$(erl -noshell -eval 'erlang:display(code:priv_dir(wx)), halt().')
REGEXP="/lib/erlang/lib/wx-.*/priv"
if [[ $WX_PRIVDIR =~ $REGEXP ]] ; then
    echo " - wxErlang present: yes"
    echo "-define(CONFIG_WXGUI, true)." >> $CONFIG
else
    echo " - wxErlang present: no  (disabling GUI)"
    echo "-undef(CONFIG_WXGUI)." >> $CONFIG
fi

# Use 'rand' instead of 'random' module starting with R18
if [ $ERLANG_OTP_RELEASE -ge 18 ] ; then
    echo " - Use 'rand' instead of 'random' module: yes"
    echo "-define(CONFIG_RAND_MODULE, true)." >> $CONFIG
else
    echo " - Use 'rand' instead of 'random' module: no"
    echo "-undef(CONFIG_RAND_MODULE)." >> $CONFIG
fi

# Newer layout for pretty-printed output starting with R18
if [ $ERLANG_OTP_RELEASE -ge 18 ] ; then
    echo " - Newer pretty-printed output layout: yes"
    echo "-define(CONFIG_PP_NEW, true)." >> $CONFIG
else
    echo " - Newer pretty-printed output layout: no"
    echo "-undef(CONFIG_PP_NEW)." >> $CONFIG
fi

# Maps appeared in R17
if [ $ERLANG_OTP_RELEASE -ge 17 ] ; then
    echo " - compile with support for maps: yes"
    echo "-define(CONFIG_MAPS, true)." >> $CONFIG
else
    echo " - compile with support for maps: no"
    echo "-undef(CONFIG_MAPS)." >> $CONFIG
fi

echo >> $CONFIG
echo "-endif." >> $CONFIG
echo "Configuration written to $CONFIG"
